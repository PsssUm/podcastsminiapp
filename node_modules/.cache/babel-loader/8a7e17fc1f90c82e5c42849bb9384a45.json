{"ast":null,"code":"import _classCallCheck from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/spbiphones/Dropbox/projects/web projects/podcasts/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import podcast_icon from\"../../resources/icons/podcast_icon.svg\";import moment from'moment';var objectUrl;var UploadPodcast=/*#__PURE__*/function(_React$Component){_inherits(UploadPodcast,_React$Component);function UploadPodcast(props){var _this;_classCallCheck(this,UploadPodcast);_this=_possibleConstructorReturn(this,_getPrototypeOf(UploadPodcast).call(this,props));_this.getDuration=function(file){objectUrl=URL.createObjectURL(file);window.document.getElementById(\"audio\").src=objectUrl;window.document.getElementById(\"audio\").addEventListener(\"canplaythrough\",_this.onCanPlayAudio);};_this.onCanPlayAudio=function(e){var seconds=e.currentTarget.duration;var duration=moment.duration(seconds,\"seconds\");var time=\"\";var hours=duration.hours();if(hours>0){time=hours+\":\";}time=time+duration.minutes()+\":\"+duration.seconds();URL.revokeObjectURL(objectUrl);_this.setState({duration:time});_this.props.durationChanged(time);};_this.isPodcastPicker=_this.props.podcast.audioFile!=undefined;_this.state={isPickedPodcast:_this.isPodcastPicker,name:\"\",duration:\"\"};_this.fileUpload=React.createRef();_this.podcastContainer=React.createRef();_this.showPickedPodcast=_this.showPickedPodcast.bind(_assertThisInitialized(_this));_this.pickPodcast=_this.pickPodcast.bind(_assertThisInitialized(_this));_this.fileChangedHandler=_this.fileChangedHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(UploadPodcast,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.isPodcastPicker){console.log(\"this.isPodcastPicker = \"+this.isPodcastPicker);this.props.podcastPicked(this.props.podcast.audioFile);this.getDuration(this.props.podcast.audioFile);this.setState({name:this.props.podcast.audioFile.name});}}},{key:\"showPickedPodcast\",value:function showPickedPodcast(){this.setState({isPickedPodcast:true});}},{key:\"pickPodcast\",value:function pickPodcast(){this.fileUpload.current.click();}},{key:\"fileChangedHandler\",value:function fileChangedHandler(event){if(event&&event.target.files&&event.target.files.length>0){// const urlObj = URL.createObjectURL(event.target.files[0])\nvar file=event.target.files[0];this.showPickedPodcast();this.setState({name:file.name});this.props.podcastPicked(file);this.getDuration(file);}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{id:\"podcastContainer\"},React.createElement(\"input\",{id:\"fileInput\",className:\"custom-file-input hover\",type:\"file\",accept:\".mp3\",onChange:this.fileChangedHandler,style:{display:\"none\"},ref:this.fileUpload}),React.createElement(\"audio\",{style:{display:'none'},id:\"audio\"}),!this.state.isPickedPodcast?React.createElement(\"div\",{className:\"upload_podcast_container\"},React.createElement(\"p\",{className:\"upload_podcast_title\"},\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\"),React.createElement(\"p\",{className:\"create_donation_text\"},\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0430\\u0443\\u0434\\u0438\\u043E\\u0444\\u0430\\u0439\\u043B \\u0438\\u0437 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0435\\u0433\\u043E\"),React.createElement(\"div\",{onClick:this.pickPodcast,className:\"stroke_button center_btn_upload hover\"},\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\")):React.createElement(\"div\",{className:\"podcast_uploaded_container\"},React.createElement(\"div\",{onClick:this.pickPodcast,className:\"flex just_content hover\"},React.createElement(\"div\",{className:\"flex\"},React.createElement(\"img\",{className:\"podcast_icon_picked\",src:podcast_icon}),React.createElement(\"p\",{className:\"podcast_title_picked\"},this.state.name)),React.createElement(\"p\",{className:\"time_podcast_picked\"},this.state.duration)),React.createElement(\"p\",{className:\"podcast_picked_decr\"},\"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0430\\u0439\\u043C\\u043A\\u043E\\u0434\\u044B \\u0438 \\u0441\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442 \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"),React.createElement(\"div\",{onClick:function onClick(){return _this2.props.openEdit();},className:\"large_stroke_button hover\"},\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0430\\u0443\\u0434\\u0438\\u043E\\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\")),React.createElement(\"div\",{className:\"navbar_line details_line\"}));}}]);return UploadPodcast;}(React.Component);export default UploadPodcast;","map":{"version":3,"sources":["/Users/spbiphones/Dropbox/projects/web projects/podcasts/src/pages/custom_views/UploadPodcast.js"],"names":["React","moment","objectUrl","UploadPodcast","props","getDuration","file","URL","createObjectURL","window","document","getElementById","src","addEventListener","onCanPlayAudio","e","seconds","currentTarget","duration","time","hours","minutes","revokeObjectURL","setState","durationChanged","isPodcastPicker","podcast","audioFile","undefined","state","isPickedPodcast","name","fileUpload","createRef","podcastContainer","showPickedPodcast","bind","pickPodcast","fileChangedHandler","console","log","podcastPicked","current","click","event","target","files","length","display","podcast_icon","openEdit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport podcast_icon from '../../resources/icons/podcast_icon.svg'\nimport moment from 'moment'\nvar objectUrl;\nclass UploadPodcast extends React.Component {\n   \n    constructor(props){\n        super(props)\n        this.isPodcastPicker = (this.props.podcast.audioFile != undefined)\n        this.state = {\n            isPickedPodcast : this.isPodcastPicker,\n            name : \"\",\n            duration : \"\",\n        }\n        this.fileUpload = React.createRef();\n        this.podcastContainer = React.createRef();\n        this.showPickedPodcast = this.showPickedPodcast.bind(this)\n        this.pickPodcast = this.pickPodcast.bind(this)\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\n        \n    }\n    componentDidMount(){\n        \n        if (this.isPodcastPicker){\n            console.log(\"this.isPodcastPicker = \" + this.isPodcastPicker)\n            this.props.podcastPicked(this.props.podcast.audioFile)\n            this.getDuration(this.props.podcast.audioFile)\n            this.setState({name : this.props.podcast.audioFile.name})\n        }\n    }\n    showPickedPodcast(){\n        this.setState({isPickedPodcast : true})\n    }\n    pickPodcast(){\n        this.fileUpload.current.click();\n    }\n    \n    fileChangedHandler(event) {\n        if(event && event.target.files && event.target.files.length > 0){\n            // const urlObj = URL.createObjectURL(event.target.files[0])\n            const file = event.target.files[0]\n            this.showPickedPodcast()\n            this.setState({name : file.name})\n            this.props.podcastPicked(file)\n            this.getDuration(file)\n\n        }\n    }\n    getDuration = (file) => {\n        objectUrl = URL.createObjectURL(file);\n        window.document.getElementById(\"audio\").src = objectUrl\n        window.document.getElementById(\"audio\").addEventListener(\"canplaythrough\", this.onCanPlayAudio)\n        \n    }\n    onCanPlayAudio = (e) =>{\n        var seconds = e.currentTarget.duration;\n        var duration = moment.duration(seconds, \"seconds\");\n        \n        var time = \"\";\n        var hours = duration.hours();\n        if (hours > 0) { time = hours + \":\" ; }\n        \n        time = time + duration.minutes() + \":\" + duration.seconds();\n        \n        URL.revokeObjectURL(objectUrl);\n        this.setState({duration : time})\n        this.props.durationChanged(time)\n    }\n  \n    render() {\n        return (\n            <div id=\"podcastContainer\">\n                <input id=\"fileInput\" className=\"custom-file-input hover\" type=\"file\" accept=\".mp3\" onChange={this.fileChangedHandler} style={{ display: \"none\" }} ref={this.fileUpload}/>\n                <audio style={{display : 'none'}} id=\"audio\"></audio>\n                {!this.state.isPickedPodcast ? \n                <div className=\"upload_podcast_container\">\n                    <p className=\"upload_podcast_title\">Загрузите Ваш подкаст</p>\n                    <p className=\"create_donation_text\">Выберите готовый аудиофайл из вашего телефона и добавьте его</p>\n                    <div onClick={this.pickPodcast} className=\"stroke_button center_btn_upload hover\">Загрузить файл</div>\n                </div> :\n                <div className=\"podcast_uploaded_container\">\n                    <div onClick={this.pickPodcast} className=\"flex just_content hover\">\n                        <div className=\"flex\">\n                            <img className=\"podcast_icon_picked\" src={podcast_icon}/>\n                            <p className=\"podcast_title_picked\">{this.state.name}</p>\n                        </div>\n                        <p className=\"time_podcast_picked\">{this.state.duration}</p>\n                    </div>\n                    <p className=\"podcast_picked_decr\">Вы можете добавить таймкоды и скорректировать подкаст в режиме редактирования</p>\n                    <div onClick={() => this.props.openEdit()} className=\"large_stroke_button hover\">Редактировать аудиозапись</div>\n                    \n                </div>}\n                <div className=\"navbar_line details_line\"/>\n                \n                \n            </div>\n        );\n    }\n}\nexport default UploadPodcast;"]},"metadata":{},"sourceType":"module"}